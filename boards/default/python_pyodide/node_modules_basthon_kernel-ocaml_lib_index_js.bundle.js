"use strict";
(self["webpackChunk_mixly_python_pyodide"] = self["webpackChunk_mixly_python_pyodide"] || []).push([["node_modules_basthon_kernel-ocaml_lib_index_js"],{

/***/ "./node_modules/@basthon/kernel-ocaml/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@basthon/kernel-ocaml/lib/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OCamlKernel: () => (/* reexport safe */ _kernel__WEBPACK_IMPORTED_MODULE_0__.OCamlKernel)
/* harmony export */ });
/* harmony import */ var _kernel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kernel */ "./node_modules/@basthon/kernel-ocaml/lib/kernel.js");



/***/ }),

/***/ "./node_modules/@basthon/kernel-ocaml/lib/kernel.js":
/*!**********************************************************!*\
  !*** ./node_modules/@basthon/kernel-ocaml/lib/kernel.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OCamlKernel: () => (/* binding */ OCamlKernel)
/* harmony export */ });
/* harmony import */ var _basthon_kernel_base_worker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @basthon/kernel-base/worker */ "./node_modules/@basthon/kernel-base/lib/worker/index.js");

/**
 * An OCaml kernel that satisfies Basthon's API.
 */
class OCamlKernel extends _basthon_kernel_base_worker__WEBPACK_IMPORTED_MODULE_0__.KernelMainBase {
    constructor(options) {
        super(options);
    }
    newWorker() {
        return new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u("node_modules_basthon_kernel-ocaml_lib_comlink-worker_js-node_modules_promise-delegate_dist_es-e9af62"), __webpack_require__.b), {
            type: undefined,
            //@ts-ignore
            sandboxed: true, // removing this line will cause security issues
        });
    }
    language() {
        return "ocaml";
    }
    languageName() {
        return "OCaml";
    }
    moduleExts() {
        return ["ml"];
    }
    /**
     * List modules launched via putModule.
     */
    userModules() {
        return [];
    }
    /**
     * Download a file from the VFS.
     */
    getFile(path) {
        return new Uint8Array([]);
    }
    /**
     * Download a user module file.
     */
    getUserModuleFile(filename) {
        return new Uint8Array([]);
    }
    /**
     * Mimic the OCaml's REPL banner.
     */
    banner() {
        return "        OCaml version 4.11.1\n";
    }
    ps1() {
        return "# ";
    }
    ps2() {
        return "  ";
    }
}


/***/ })

}]);
//# sourceMappingURL=node_modules_basthon_kernel-ocaml_lib_index_js.bundle.js.map